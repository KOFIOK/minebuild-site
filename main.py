"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–∞–π—Ç–∞ MineBuild –∏ Discord –±–æ—Ç–∞.

–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:
- –í–µ–±-—Å–∞–π—Ç: Flask/Quart –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (app.py)
- Discord –±–æ—Ç: –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ (bot/main.py)
- –ó–∞–ø—É—Å–∫: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º asyncio.gather()

–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:
- üîÑ –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (—Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞)
- üìù –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (UI, —É—Ç–∏–ª–∏—Ç—ã, –∫–æ–º–∞–Ω–¥—ã)
- üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ View –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
- üõ°Ô∏è –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  python main.py - –∑–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞ –∏ –±–æ—Ç–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
  CTRL+C - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±–æ–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import os
import asyncio
import signal
import sys
import traceback
import logging
import platform
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ü–ï–†–ï–î –∏–º–ø–æ—Ä—Ç–æ–º –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
load_dotenv()

from hypercorn.config import Config
from hypercorn.asyncio import serve
from app import app
from bot.main import MineBuildBot
from bot.config import setup_logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–æ—Ç–∞
bot_logger = setup_logging()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤—ã–≤–æ–¥–∞ –¥–ª—è Windows
if platform.system() == 'Windows':
    # –ò–∑–º–µ–Ω—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤—ã–≤–æ–¥–∞ –∫–æ–Ω—Å–æ–ª–∏ –Ω–∞ UTF-8
    sys.stdout.reconfigure(encoding='utf-8')
    sys.stderr.reconfigure(encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è main.py
main_logger = logging.getLogger("MineBuildMain")
main_logger.setLevel(logging.INFO)
main_logger.propagate = False  # –û—Ç–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ–¥–∞—á—É –ª–æ–≥–æ–≤ –≤–≤–µ—Ä—Ö –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
if not main_logger.handlers:
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π UTF-8
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))
    main_logger.addHandler(console_handler)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8
    file_handler = logging.FileHandler("main.log", encoding='utf-8')
    file_handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))
    main_logger.addHandler(file_handler)

# –°–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot = MineBuildBot()

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
main_logger.info("=== MineBuild: –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===")
main_logger.info("üì± –í–µ–±-—Å–∞–π—Ç: Flask/Quart –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
main_logger.info("ü§ñ Discord –±–æ—Ç: –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏")
main_logger.info("üîÑ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞")
main_logger.info("=" * 55)

# –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
shutdown_event = asyncio.Event()
# –§–ª–∞–≥ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
is_shutting_down = False

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞ –∫–∞–∫–æ–π –û–° –∑–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç
IS_WINDOWS = platform.system() == 'Windows'
main_logger.info(f"–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {platform.system()}")

async def run_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ Discord."""
    try:
        main_logger.info("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Discord –±–æ—Ç–∞ (–º–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)...")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
        discord_token = os.getenv('DISCORD_BOT_TOKEN')
        if not discord_token:
            main_logger.error("‚ùå DISCORD_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return
        main_logger.info("üîë Discord —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ API...")
        await bot.start(discord_token)
    except asyncio.CancelledError:
        main_logger.info("üîå –û—Ç–∫–ª—é—á–∞–µ–º Discord –±–æ—Ç–∞...")
    except Exception as e:
        main_logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Discord –±–æ—Ç–∞: {e}", exc_info=True)
    finally:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ –ø—Ä–∏ –ª—é–±–æ–º –∏—Å—Ö–æ–¥–µ
        if hasattr(bot, 'is_ready') and bot.is_ready():
            main_logger.info("üîê –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Discord API...")
            await bot.close()

async def run_quart():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä Quart."""
    config = Config()
    config.bind = ["0.0.0.0:5000"]
    config.use_reloader = False  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    
    try:
        main_logger.info("üì± –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ 0.0.0.0:5000...")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        app.bot = bot
        main_logger.info("üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Discord –±–æ—Ç–∞ —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º shutdown_event –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        await serve(app, config, shutdown_trigger=shutdown_event.wait)
    except asyncio.CancelledError:
        main_logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...")
    except Exception as e:
        main_logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}", exc_info=True)

def handle_exit_signal(signame=None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è."""
    global is_shutting_down
    
    # –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if is_shutting_down:
        return
    
    is_shutting_down = True
    main_logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {'–≤—ã—Ö–æ–¥–∞' if signame is None else signame}, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è hypercorn
    shutdown_event.set()
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π, —á—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –≤—Å–µ—Ö –∑–∞–¥–∞—á
    try:
        loop = asyncio.get_event_loop()
        
        # –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–π
        for task in asyncio.all_tasks(loop):
            if task is not asyncio.current_task():
                task.cancel()
    except RuntimeError:
        # –í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        main_logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ü–∏–∫–ª—É —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è Windows
def windows_signal_handler(signal_type):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è Windows."""
    if signal_type == signal.SIGINT:
        handle_exit_signal("SIGINT (CTRL+C)")
        return True  # –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ –ø–µ—Ä–µ—Ö–≤–∞—Ç–µ —Å–∏–≥–Ω–∞–ª–∞
    return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤."""
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        if IS_WINDOWS:
            # –ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è KeyboardInterrupt
            main_logger.info("–ó–∞–ø—É—Å–∫ –Ω–∞ Windows: –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤")
        else:
            # –ù–∞ Unix-–ø–æ–¥–æ–±–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º add_signal_handler
            main_logger.info("–ó–∞–ø—É—Å–∫ –Ω–∞ Unix-–ø–æ–¥–æ–±–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤")
            loop = asyncio.get_event_loop()
            for sig in (signal.SIGINT, signal.SIGTERM):
                loop.add_signal_handler(
                    sig,
                    lambda signame=sig.name: handle_exit_signal(signame)
                )
        
        main_logger.info("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞–∂–º–∏—Ç–µ CTRL+C")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        await asyncio.gather(
            run_bot(),
            run_quart(),
            return_exceptions=True  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ
        )
    except asyncio.CancelledError:
        main_logger.info("–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á...")
    except Exception as e:
        main_logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
    finally:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ shutdown_event —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        shutdown_event.set()
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º 2-—Å–µ–∫—É–Ω–¥–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        try:
            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –±–æ—Ç –∑–∞–∫—Ä—ã–ª—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
            if hasattr(bot, 'is_ready') and bot.is_ready():
                main_logger.info("–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Discord...")
                await asyncio.wait_for(bot.close(), timeout=2.0)
        except asyncio.TimeoutError:
            main_logger.warning("–ü—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç –∑–∞–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞ Discord")
        except Exception as e:
            main_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–æ—Ç–∞: {e}", exc_info=True)
        
        main_logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")

if __name__ == '__main__':
    try:
        if IS_WINDOWS:
            # –î–ª—è Windows - –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º KeyboardInterrupt –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            try:
                asyncio.run(main())
            except KeyboardInterrupt:
                main_logger.info("–ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω CTRL+C")
                handle_exit_signal("CTRL+C")
        else:
            # –î–ª—è Unix-–ø–æ–¥–æ–±–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
            asyncio.run(main())
    except KeyboardInterrupt:
        main_logger.info("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ KeyboardInterrupt")
    except Exception as e:
        main_logger.error(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}", exc_info=True)
        traceback.print_exc()  # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å
    finally:
        main_logger.info("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø–∏—Å—å –ª–æ–≥–æ–≤
        try:
            for handler in main_logger.handlers:
                handler.close()
        except:
            pass
        sys.exit(0)