"""
Discord UI Views –¥–ª—è –±–æ—Ç–∞ MineBuild
"""

import logging
import discord
from .buttons import (
    ApproveButton, RejectButton, CandidateButton,
    RemoveFromWhitelistButton, IgnoreLeaveButton
)

logger = logging.getLogger("MineBuildBot.UI.Views")


class PersistentApplicationView(discord.ui.View):
    """–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞—è–≤–æ–∫."""
    
    def __init__(self) -> None:
        super().__init__(timeout=None)
    
    @discord.ui.button(
        label="–ó–∞–≥—Ä—É–∑–∫–∞...",
        style=discord.ButtonStyle.secondary,
        custom_id="placeholder_button",
        disabled=True
    )
    async def placeholder_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ó–∞–≥–ª—É—à–∫–∞ - —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –≤—ã–∑—ã–≤–∞—Ç—å—Å—è."""
        await interaction.response.send_message("–û—à–∏–±–∫–∞: –∑–∞–≥–ª—É—à–∫–∞ –∫–Ω–æ–ø–∫–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞", ephemeral=True)

    @staticmethod
    def create_for_application(discord_id: str, is_candidate: bool = False) -> 'PersistentApplicationView':
        """
        –°–æ–∑–¥–∞–µ—Ç View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏.
        
        Args:
            discord_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Discord
            is_candidate: –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º
            
        Returns:
            PersistentApplicationView: View —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        """
        view = PersistentApplicationView()
        view.clear_items()  # –£–¥–∞–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞—è–≤–∫–∏
        view.add_item(ApproveButton(discord_id, is_candidate))
        view.add_item(RejectButton(discord_id, is_candidate))
        
        # –ö–Ω–æ–ø–∫–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞—è–≤–æ–∫
        if not is_candidate:
            view.add_item(CandidateButton(discord_id))
            
        return view

    @staticmethod
    def create_for_candidate(discord_id: str) -> 'PersistentApplicationView':
        """
        –°–æ–∑–¥–∞–µ—Ç View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.
        
        Args:
            discord_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Discord
            
        Returns:
            PersistentApplicationView: View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        """
        view = PersistentApplicationView()
        view.clear_items()  # –£–¥–∞–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏" (–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è)
        candidate_button = discord.ui.Button(
            style=discord.ButtonStyle.primary,
            label="–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏",
            emoji="üîç",
            disabled=True,
            custom_id=f"candidate_disabled_{discord_id}"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        view.add_item(candidate_button)
        view.add_item(ApproveButton(discord_id, is_candidate=True))
        view.add_item(RejectButton(discord_id, is_candidate=True))
            
        return view


class PersistentMemberLeaveView(discord.ui.View):
    """–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—ã—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."""
    
    def __init__(self, member_id: str = None, nickname: str = None) -> None:
        super().__init__(timeout=None)
        
        if member_id and nickname:
            self.add_item(RemoveFromWhitelistButton(member_id, nickname))
            self.add_item(IgnoreLeaveButton(member_id, nickname))


class PersistentViewManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö View."""
    
    def __init__(self, bot):
        self.bot = bot
        self.registered_views = {}
    
    def register_view(self, view_class, view_id: str = None):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ."""
        if view_id is None:
            view_id = view_class.__name__
            
        self.registered_views[view_id] = view_class
        logger.info(f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ: {view_id}")
    
    async def restore_views_from_messages(self):
        """
        –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç View –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–∞—Ö.
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
        """
        logger.info("–ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π...")
        restored_count = 0
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≥–∏–ª—å–¥–∏–∏ –±–æ—Ç–∞
            for guild in self.bot.guilds:
                logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä: {guild.name}")
                
                # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º
                for channel in guild.text_channels:
                    try:
                        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è)
                        message_count = 0
                        async for message in channel.history(limit=200):
                            message_count += 1
                            if message.author == self.bot.user and message.components:
                                success = await self._restore_view_for_message(message)
                                if success:
                                    restored_count += 1
                                
                    except discord.Forbidden:
                        # –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É
                        logger.debug(f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É {channel.name}")
                        continue
                    except discord.HTTPException as e:
                        logger.warning(f"HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞–Ω–∞–ª–∞ {channel.name}: {e}")
                        continue
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞–Ω–∞–ª–∞ {channel.name}: {e}")
                        continue
                        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π: {e}")
        
        logger.info(f"–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π: {restored_count}")
    
    async def _restore_view_for_message(self, message: discord.Message):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç View –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        try:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            restored_view = None
            
            for action_row in message.components:
                for component in action_row.children:
                    if hasattr(component, 'custom_id') and component.custom_id:
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
                        if (component.custom_id.endswith('_loading') or 
                            component.custom_id.startswith('removed_') or 
                            component.custom_id.startswith('ignored_') or
                            component.custom_id.startswith('candidate_disabled_')):
                            continue
                            
                        restored_view = self._create_view_from_custom_id(component.custom_id, message)
                        if restored_view:
                            break
                if restored_view:
                    break
            
            if restored_view:
                # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫ –±–æ—Ç—É
                self.bot.add_view(restored_view)
                logger.debug(f"–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message.id} –≤ –∫–∞–Ω–∞–ª–µ {message.channel.name}")
                return True
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message.id}: {e}")
            
        return False
    
    def _create_view_from_custom_id(self, custom_id: str, message: discord.Message):
        """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ View –Ω–∞ –æ—Å–Ω–æ–≤–µ custom_id."""
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø View –ø–æ custom_id
            if custom_id.startswith(('approve_', 'reject_', 'candidate_')):
                return self._restore_application_view(message)
            elif custom_id.startswith(('remove_whitelist_', 'ignore_leave_')):
                return self._restore_member_leave_view(message)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ View –∏–∑ custom_id {custom_id}: {e}")
            
        return None
    
    def _restore_application_view(self, message: discord.Message):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ApplicationView –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        view = PersistentApplicationView()
        view.clear_items()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –∏ –≤–æ—Å—Å–æ–∑–¥–∞–µ–º –∏—Ö
        for action_row in message.components:
            for component in action_row.children:
                if hasattr(component, 'custom_id') and component.custom_id:
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (–∑–∞–≥—Ä—É–∑–∫–∞, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∏ —Ç.–¥.)
                    if (component.custom_id.endswith('_loading') or 
                        component.custom_id.startswith('removed_') or 
                        component.custom_id.startswith('ignored_') or
                        component.custom_id.startswith('candidate_disabled_') or
                        component.disabled):
                        continue
                        
                    button = self._create_button_from_custom_id(component.custom_id)
                    if button:
                        view.add_item(button)
                        
        return view if view.children else None
    
    def _restore_member_leave_view(self, message: discord.Message):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç MemberLeaveView –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        view = PersistentMemberLeaveView()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –∏ –≤–æ—Å—Å–æ–∑–¥–∞–µ–º –∏—Ö
        for action_row in message.components:
            for component in action_row.children:
                if hasattr(component, 'custom_id') and component.custom_id:
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (–∑–∞–≥—Ä—É–∑–∫–∞, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∏ —Ç.–¥.)
                    if (component.custom_id.endswith('_loading') or 
                        component.custom_id.startswith('removed_') or 
                        component.custom_id.startswith('ignored_') or
                        component.disabled):
                        continue
                        
                    button = self._create_button_from_custom_id(component.custom_id)
                    if button:
                        view.add_item(button)
                        
        return view if view.children else None
    
    def _create_button_from_custom_id(self, custom_id: str):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –∏–∑ custom_id."""
        try:
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–∞–∂–¥—ã–π —Ç–∏–ø –∫–Ω–æ–ø–∫–∏
            for button_class in [ApproveButton, RejectButton, CandidateButton, 
                                RemoveFromWhitelistButton, IgnoreLeaveButton]:
                try:
                    button = button_class.from_custom_id(custom_id)
                    if button:
                        return button
                except:
                    continue
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏ –∏–∑ custom_id {custom_id}: {e}")
            
        return None


# Deprecated - –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
ApplicationView = PersistentApplicationView
MemberLeaveView = PersistentMemberLeaveView
