"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä MineBuild
"""

import time
import logging
import discord
from typing import List, Dict, Any

from ..config import (
    recent_applications,
    DEDUP_WINDOW,
    MODERATOR_ROLE_ID
)

logger = logging.getLogger("MineBuildBot.Applications")


def create_embed_with_fields(title: str, fields_data: List[Dict[str, Any]], timestamp=None) -> discord.Embed:
    """
    –°–æ–∑–¥–∞–µ—Ç embed —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏.
    
    Args:
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ embed —Å–æ–æ–±—â–µ–Ω–∏—è
        fields_data: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª–µ–π (name, value, inline)
        timestamp: –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –¥–ª—è embed
        
    Returns:
        discord.Embed: –°–æ–∑–¥–∞–Ω–Ω–æ–µ embed —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    embed = discord.Embed(
        title=title,
        color=0x00E5A1
    )
    if timestamp:
        embed.timestamp = timestamp

    for field in fields_data:
        embed.add_field(**field)
        
    return embed


async def create_application_message(
    channel: discord.TextChannel, 
    user_identifier: str, 
    embed: discord.Embed
) -> bool:
    """
    –°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞—è–≤–∫–æ–π –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.
    
    Args:
        channel: –ö–∞–Ω–∞–ª Discord –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏
        user_identifier: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–µ—Ç –±—ã—Ç—å None –¥–ª—è –Ω–æ–≤–æ–π —Ñ–æ—Ä–º—ã)
        embed: Embed —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∏–Ω–∞—á–µ False
    """
    try:
        # –ï—Å–ª–∏ user_identifier –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, —ç—Ç–æ –æ—à–∏–±–∫–∞
        if user_identifier is None:
            logger.error("user_identifier –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å None –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤–µ–±-–∑–∞—è–≤–æ–∫)
        current_time = time.time()
        if user_identifier in recent_applications:
            recent_apps = recent_applications[user_identifier]
            
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
            recent_apps = [t for t in recent_apps if current_time - t < DEDUP_WINDOW]
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–¥–∞–≤–Ω–∏–µ –∑–∞—è–≤–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if recent_apps:
                logger.warning(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_identifier}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                return False
                
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∑–∞—è–≤–∫—É –≤ —Å–ø–∏—Å–æ–∫
            recent_apps.append(current_time)
            recent_applications[user_identifier] = recent_apps
        else:
            recent_applications[user_identifier] = [current_time]

        # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        main_fields = []
        details_fields = []
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–≤—ã–º –ø–æ–ª—è–º)
        inline_field_names = ['–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –≤ Minecraft', '–ò–º—è (—Ä–µ–∞–ª—å–Ω–æ–µ)', '–í–æ–∑—Ä–∞—Å—Ç', '–û–ø—ã—Ç –∏–≥—Ä—ã –≤ Minecraft']
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—è –∏–∑ embeds –≤ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Ü–µ–ª—è—Ö
        all_field_names = [field.name for field in embed.fields]
        logger.info(f"–ó–∞—è–≤–∫–∞ –æ—Ç {user_identifier} —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è: {all_field_names}")
        
        for field in embed.fields:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—è —Å Discord ID
            if 'discord' in field.name.lower() or 'discord_id' == field.name:
                continue
                
            # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–∞–Ω–Ω—ã—Ö
            field_data = {
                'name': field.name,
                'value': field.value,
                'inline': field.name in inline_field_names
            }
            
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            if field.name in inline_field_names:
                main_fields.append(field_data)
            else:
                details_fields.append(field_data)

        # –°–æ–∑–¥–∞–µ–º embeds –¥–ª—è –∫–∞–Ω–∞–ª–∞
        embeds = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if main_fields:
            embeds.append(create_embed_with_fields(
                "üìù –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                main_fields,
                embed.timestamp
            ))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if details_fields:
            logger.info(f"–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: {details_fields}")
            embeds.append(create_embed_with_fields(
                "üìã –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                details_fields,
                embed.timestamp
            ))
        else:
            logger.warning(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∑–∞—è–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_identifier}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—å –æ–¥–∏–Ω embed –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        if not embeds:
            logger.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞—è–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_identifier}")
            return False

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤ –∫–∞–Ω–∞–ª
        view = None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å Discord ID –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        if user_identifier and not user_identifier.startswith('web_user_'):
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º View –ª–æ–∫–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
            from ..ui.views import PersistentApplicationView
            
            # –û–±—ã—á–Ω–∞—è –∑–∞—è–≤–∫–∞ —á–µ—Ä–µ–∑ Discord
            view = PersistentApplicationView.create_for_application(user_identifier, is_candidate=False)
            content_prefix = f"-# <@&{MODERATOR_ROLE_ID}>\n"
            content = f"{content_prefix}## –ó–∞—è–≤–∫–∞ –∏–≥—Ä–æ–∫–∞ <@{user_identifier}>"
        elif user_identifier and user_identifier.isdigit():
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º View –ª–æ–∫–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
            from ..ui.views import PersistentApplicationView
            
            # –ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ —Å –≤–∞–ª–∏–¥–Ω—ã–º Discord ID
            view = PersistentApplicationView.create_for_application(user_identifier, is_candidate=False)
            content_prefix = f"-# <@&{MODERATOR_ROLE_ID}>\n"
            content = f"{content_prefix}## –ó–∞—è–≤–∫–∞ –∏–≥—Ä–æ–∫–∞ <@{user_identifier}>"
        else:
            # –ó–∞—è–≤–∫–∞ –±–µ–∑ Discord ID –∏–ª–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
            content_prefix = f"-# <@&{MODERATOR_ROLE_ID}>\n"
            content = f"{content_prefix}## –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!"
            view = None  # –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ Discord ID
        
        message = await channel.send(
            content=content,
            embeds=embeds,
            view=view
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞—è–≤–∫–∞ —Å ID —Å–æ–æ–±—â–µ–Ω–∏—è: {message.id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–ø–∏—é –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π Discord ID)
        if user_identifier and user_identifier.isdigit():
            try:
                user = await channel.guild.fetch_member(int(user_identifier))
                if user:
                    user_embeds = []
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if main_fields:
                        user_main_embed = create_embed_with_fields(
                            "üìù –í–∞—à–∞ –∑–∞—è–≤–∫–∞ (–æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)",
                            main_fields,
                            embed.timestamp
                        )
                        user_main_embed.description = "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!"
                        user_embeds.append(user_main_embed)
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if details_fields:
                        user_details_embed = create_embed_with_fields(
                            "üìã –í–∞—à–∞ –∑–∞—è–≤–∫–∞ (–ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)",
                            details_fields,
                            embed.timestamp
                        )
                        user_embeds.append(user_details_embed)

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–ø–∏—é –∑–∞—è–≤–∫–∏
                    await user.send(
                        content="# ‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n–û–∂–∏–¥–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –∫—É—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–∞–±–æ—Ä–∞. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.",
                        embeds=user_embeds
                    )
            except discord.Forbidden:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_identifier}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–ø–∏–∏ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}", exc_info=True)

        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏: {e}", exc_info=True)
        return False
