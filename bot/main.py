"""
–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Discord –±–æ—Ç–∞ MineBuild
"""

import os
import logging
import signal
import asyncio
import discord
from discord.ext import commands

from .config import (
    setup_logging,
    DISCORD_TOKEN,
    GUILD_ID
)
from .config_manager import (
    get_whitelist_role_id,
    get_log_channel_id,
    get_donation_channel_id,
    get_donator_role_id
)
from .ui.views import (
    PersistentApplicationView, 
    PersistentMemberLeaveView, 
    PersistentViewManager
)
from .utils.minecraft import execute_minecraft_command

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_logging()


async def send_member_leave_notification(channel: discord.TextChannel, member_id: int, nickname: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π.
    
    Args:
        channel: –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        member_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Discord
        nickname: –ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –°–æ–∑–¥–∞–µ–º view —Å –∫–Ω–æ–ø–∫–∞–º–∏
    view = PersistentMemberLeaveView(str(member_id), nickname)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await channel.send(
        content=f"## –ò–≥—Ä–æ–∫ <@{member_id}> —Å –Ω–∏–∫–æ–º `{nickname}` –≤—ã—à–µ–ª –∏–∑ –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞!\n> - –ñ–µ–ª–∞–µ—Ç–µ –µ–≥–æ –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞?",
        view=view
    )


class MineBuildBot(commands.Bot):
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ MineBuild."""
    
    def __init__(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –Ω—É–∂–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
        intents = discord.Intents.default()
        intents.message_content = True
        intents.members = True  # –í–∫–ª—é—á–µ–Ω—ã –∏–Ω—Ç–µ–Ω—Ç—ã –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        super().__init__(
            command_prefix="!",
            intents=intents,
            help_command=None  # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É help
        )
        # –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ on_ready)
        self.channel_for_applications = None
        
        # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
        self.persistent_view_manager = PersistentViewManager(self)
        
    async def setup_hook(self) -> None:
        """–•—É–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤."""
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (cogs)
        try:
            await self.load_extension("bot.cogs.admin")
            logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å admin commands")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è admin: {e}")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        self.persistent_view_manager.register_view(PersistentApplicationView, "ApplicationView")
        self.persistent_view_manager.register_view(PersistentMemberLeaveView, "MemberLeaveView")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞—è–≤–æ–∫ (–º–æ–∂–Ω–æ –±–µ–∑ –∫–Ω–æ–ø–æ–∫)
        self.add_view(PersistentApplicationView())
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        try:
            if GUILD_ID:
                guild = discord.Object(id=GUILD_ID)
                self.tree.copy_global_to(guild=guild)
                
                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
                commands_before = len(self.tree.get_commands())
                logger.info(f"–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ {commands_before} –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {GUILD_ID}")
                
                synced = await self.tree.sync(guild=guild)
                logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {GUILD_ID}")
                
                # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                if synced:
                    command_names = [cmd.name for cmd in synced]
                    logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: {', '.join(command_names)}")
                else:
                    logger.warning("–ù–µ—Ç –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
                    
            else:
                logger.warning("GUILD_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ")
                commands_before = len(self.tree.get_commands())
                logger.info(f"–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ {commands_before} –∫–æ–º–∞–Ω–¥")
                
                synced = await self.tree.sync()
                logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥ –≥–ª–æ–±–∞–ª—å–Ω–æ")
                
                if synced:
                    command_names = [cmd.name for cmd in synced]
                    logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: {', '.join(command_names)}")
                    
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")
            try:
                logger.info("–ü–æ–ø—ã—Ç–∫–∞ fallback –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
                synced = await self.tree.sync()  # Fallback –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                logger.info(f"‚úÖ Fallback: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥ –≥–ª–æ–±–∞–ª—å–Ω–æ")
            except Exception as fallback_error:
                logger.error(f"‚ùå Fallback —Ç–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª—Å—è: {fallback_error}")
        
    async def on_ready(self) -> None:
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord."""
        logger.info(f"ü§ñ –ë–æ—Ç {self.user} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö
        total_commands = len(self.tree.get_commands())
        logger.info(f"üìã –î–æ—Å—Ç—É–ø–Ω–æ –∫–æ–º–∞–Ω–¥ –≤ –¥–µ—Ä–µ–≤–µ: {total_commands}")
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è—Ö
        loaded_extensions = list(self.extensions.keys())
        if loaded_extensions:
            logger.info(f"üîß –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {', '.join(loaded_extensions)}")
        else:
            logger.warning("‚ö†Ô∏è –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π")
        
        # –ù–∞—Ö–æ–¥–∏–º –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
        application_channel_id = 1360709668770418789  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∑–∞—è–≤–æ–∫
        
        try:
            self.channel_for_applications = self.get_channel(application_channel_id)
            if self.channel_for_applications:
                logger.info(f"–ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞–π–¥–µ–Ω: {self.channel_for_applications.name}")
            else:
                logger.warning(f"–ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ —Å ID {application_channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∑–∞—è–≤–æ–∫: {e}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        try:
            await self.persistent_view_manager.restore_views_from_messages()
            logger.info("–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π: {e}")
            
        logger.info("–ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

    async def on_member_remove(self, member: discord.Member) -> None:
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–¥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä."""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å –≤–∞–π—Ç–ª–∏—Å—Ç–∞
            has_whitelist = any(role.id == get_whitelist_role_id() for role in member.roles)
            
            if has_whitelist:
                # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                nickname = member.nick or member.name
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ª–æ–≥-–∫–∞–Ω–∞–ª
                log_channel = self.get_channel(get_log_channel_id())
                if log_channel:
                    await send_member_leave_notification(log_channel, member.id, nickname)
                    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.id} —Å —Ä–æ–ª—å—é –≤–∞–π—Ç–ª–∏—Å—Ç–∞")
                else:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ {get_log_channel_id()}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}", exc_info=True)
    
    async def handle_donation(self, nickname: str, amount: int) -> bool:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–Ω–∞—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
        - –ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –¥–æ–Ω–∞—Ç–æ–≤ –æ—Ç 100‚ÇΩ
        - –í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –¥–æ–Ω–∞—Ç–µ—Ä–∞ –∑–∞ –¥–æ–Ω–∞—Ç—ã –æ—Ç 300‚ÇΩ
        - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—Ñ—Ñ–∏–∫—Å–∞ —á–µ—Ä–µ–∑ RCON –∑–∞ –¥–æ–Ω–∞—Ç—ã –æ—Ç 500‚ÇΩ
        
        Args:
            nickname: –ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞
            amount: –°—É–º–º–∞ –¥–æ–Ω–∞—Ç–∞ –≤ —Ä—É–±–ª—è—Ö
            
        Returns:
            bool: True –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –¥–æ–Ω–∞—Ç–∞—Ö
            donation_channel = self.get_channel(get_donation_channel_id())
            if not donation_channel:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –¥–ª—è –¥–æ–Ω–∞—Ç–æ–≤ —Å ID {get_donation_channel_id()}")
                return False

            logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–Ω–∞—Ç–∞: –∏–≥—Ä–æ–∫={nickname}, —Å—É–º–º–∞={amount}‚ÇΩ")

            # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ embed-—Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é
            embed = discord.Embed(
                title="–ù–æ–≤—ã–π –¥–æ–Ω–∞—Ç!",
                description=f"**{nickname}** - —Å–ø–∞—Å–∏–±–æ –∑–∞ **{amount} ‚ÇΩ** –ø–µ—Ä–µ–≤–æ–¥–æ–º",
                color=0x68caff  # –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç (68caff)
            )
            
            embed.set_footer(text="MineBuild Donations")
            embed.timestamp = discord.utils.utcnow()

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–≥—Ä–∞–¥–∞—Ö
            rewards = []
            if amount >= 100:
                rewards.append("‚úÖ –ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            
            if amount >= 300:
                rewards.append("‚úÖ –†–æ–ª—å –ë–ª–∞–≥–æ–¥–µ—è—Ç–µ–ª—è –≤ Discord")
            
            if amount >= 500:
                rewards.append("‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—É—Ñ—Ñ–∏–∫—Å –≤ –∏–≥—Ä–µ")
            
            if amount >= 1000:
                rewards.append("‚úÖ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Å—É—Ñ—Ñ–∏–∫—Å –≤ –∏–≥—Ä–µ")
            
            if rewards:
                embed.add_field(name="–ù–∞–≥—Ä–∞–¥—ã", value="\n".join(rewards), inline=False)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–Ω–∞—Ç–µ
            await donation_channel.send(embed=embed)
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–Ω–∞—Ç–µ –∏–≥—Ä–æ–∫–∞ {nickname} –Ω–∞ —Å—É–º–º—É {amount}‚ÇΩ")

            # –ï—Å–ª–∏ —Å—É–º–º–∞ –¥–æ–Ω–∞—Ç–∞ 300‚ÇΩ –∏ –±–æ–ª—å—à–µ - –≤—ã–¥–∞–µ–º —Ä–æ–ª—å –ë–ª–∞–≥–æ–¥–µ—è—Ç–µ–ª—è
            if amount >= 300:
                # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä
                guild = donation_channel.guild
                
                # –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫—É
                member = None
                for m in guild.members:
                    member_nick = m.nick or m.name
                    if member_nick.lower() == nickname.lower():
                        member = m
                        break
                
                if member:
                    # –í—ã–¥–∞–µ–º —Ä–æ–ª—å –ë–ª–∞–≥–æ–¥–µ—è—Ç–µ–ª—è
                    donator_role = guild.get_role(get_donator_role_id())
                    if donator_role:
                        await member.add_roles(donator_role)
                        logger.info(f"–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å –ë–ª–∞–≥–æ–¥–µ—è—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {nickname}")
                    else:
                        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–æ–ª—å –ë–ª–∞–≥–æ–¥–µ—è—Ç–µ–ª—è —Å ID {get_donator_role_id()}")
                else:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–æ–º {nickname} –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ë–ª–∞–≥–æ–¥–µ—è—Ç–µ–ª—è")

            # –ï—Å–ª–∏ —Å—É–º–º–∞ –¥–æ–Ω–∞—Ç–∞ 500‚ÇΩ –∏ –±–æ–ª—å—à–µ - –≤—ã–¥–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å —á–µ—Ä–µ–∑ RCON
            if amount >= 500:
                # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Minecraft —á–µ—Ä–µ–∑ RCON
                success = await execute_minecraft_command(f"lp user {nickname} permission set title.u.donate")
                
                if success:
                    logger.info(f"–í—ã–¥–∞–Ω —Å—É—Ñ—Ñ–∏–∫—Å –¥–æ–Ω–∞—Ç–µ—Ä–∞ –∏–≥—Ä–æ–∫—É {nickname}")
                else:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Å—É—Ñ—Ñ–∏–∫—Å –¥–æ–Ω–∞—Ç–µ—Ä–∞ –∏–≥—Ä–æ–∫—É {nickname}")
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ
                    error_embed = discord.Embed(
                        title="‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!",
                        description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Å—É—Ñ—Ñ–∏–∫—Å –∏–≥—Ä–æ–∫—É **{nickname}**. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –≤—ã–¥–∞—á–∞.",
                        color=0xFF0000
                    )
                    await donation_channel.send(embed=error_embed)

            return True

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–Ω–∞—Ç–∞: {e}", exc_info=True)
            return False

    async def close(self) -> None:
        """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞, –æ—Å–≤–æ–±–æ–∂–¥–∞—è –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã."""
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
        
        try:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
            if hasattr(self, 'persistent_view_manager'):
                logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π...")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å cleanup –¥–ª—è view manager, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏, –∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â—É—é
            current_task = asyncio.current_task()
            all_tasks = [task for task in asyncio.all_tasks() if not task.done() and task != current_task]
            
            if all_tasks:
                logger.info(f"–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è {len(all_tasks)} –∑–∞–¥–∞—á...")
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Ç–∏–ø–∞–º –¥–ª—è –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–º–µ–Ω—ã
                cancellable_tasks = []
                system_tasks = []
                
                for task in all_tasks:
                    task_name = getattr(task, 'get_name', lambda: 'unknown')()
                    if any(keyword in task_name.lower() for keyword in ['timeout', 'sleep', 'wait', 'connection']):
                        system_tasks.append(task)
                    else:
                        cancellable_tasks.append(task)
                
                # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—ã—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
                if cancellable_tasks:
                    try:
                        await asyncio.wait_for(
                            asyncio.gather(*cancellable_tasks, return_exceptions=True),
                            timeout=5.0
                        )
                        logger.info(f"‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ {len(cancellable_tasks)} –æ–±—ã—á–Ω—ã—Ö –∑–∞–¥–∞—á")
                    except asyncio.TimeoutError:
                        logger.warning(f"‚è∞ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ {len(cancellable_tasks)} –æ–±—ã—á–Ω—ã—Ö –∑–∞–¥–∞—á, –æ—Ç–º–µ–Ω—è–µ–º...")
                        for task in cancellable_tasks:
                            if not task.done():
                                task.cancel()
                
                # –û—Ç–¥–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–¥–∞—á–∏
                if system_tasks:
                    logger.info(f"–û—Ç–º–µ–Ω–∞ {len(system_tasks)} —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–¥–∞—á...")
                    for task in system_tasks:
                        if not task.done():
                            try:
                                task.cancel()
                            except Exception as e:
                                logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∑–∞–¥–∞—á–∏: {e}")
                    
                    # –î–∞–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
                    try:
                        await asyncio.wait_for(
                            asyncio.gather(*system_tasks, return_exceptions=True),
                            timeout=2.0
                        )
                    except asyncio.TimeoutError:
                        logger.debug("–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–¥–∞—á–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –≤ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
            
        except asyncio.TimeoutError:
            logger.warning("‚è∞ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º...")
        except RecursionError:
            logger.warning("üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –∑–∞–¥–∞—á, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã: {e}", exc_info=True)
        finally:
            # –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥ close
            try:
                await super().close()
                logger.info("‚úÖ –ë–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ super().close(): {e}", exc_info=True)

def run_bot():
    """–°–æ–∑–¥–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã."""
    if not DISCORD_TOKEN:
        logger.error("DISCORD_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = MineBuildBot()
    
    # –§–ª–∞–≥ –¥–ª—è graceful shutdown
    shutdown_event = asyncio.Event()
    
    async def shutdown_handler():
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã."""
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã...")
        shutdown_event.set()
        
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –±–æ—Ç–∞
        if not bot.is_closed():
            await bot.close()
    
    def signal_handler(signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ —Å–∏—Å—Ç–µ–º—ã."""
        logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ...")
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è graceful shutdown
        loop = asyncio.get_event_loop()
        if loop.is_running():
            loop.create_task(shutdown_handler())
        else:
            asyncio.run(shutdown_handler())
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    try:
        signal.signal(signal.SIGINT, signal_handler)  # Ctrl+C
        if hasattr(signal, 'SIGTERM'):
            signal.signal(signal.SIGTERM, signal_handler)  # Terminate
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        bot.run(DISCORD_TOKEN, log_handler=None)  # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π log handler
    except KeyboardInterrupt:
        logger.info("‚å®Ô∏è –ü–æ–ª—É—á–µ–Ω KeyboardInterrupt, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}", exc_info=True)
    finally:
        logger.info("üîö –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


async def run_bot_async():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è lifecycle."""
    if not DISCORD_TOKEN:
        logger.error("DISCORD_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    bot = MineBuildBot()
    
    try:
        logger.info("üöÄ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await bot.start(DISCORD_TOKEN)
    except asyncio.CancelledError:
        logger.info("üõë –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω")
        raise  # –ü–µ—Ä–µ–¥–∞–µ–º CancelledError –≤—ã—à–µ
    except KeyboardInterrupt:
        logger.info("‚å®Ô∏è –ü–æ–ª—É—á–µ–Ω KeyboardInterrupt –≤ run_bot_async...")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}", exc_info=True)
    finally:
        if not bot.is_closed():
            logger.info("üîÑ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
            try:
                await bot.close()
            except Exception as close_error:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–æ—Ç–∞: {close_error}", exc_info=True)
        logger.info("üîö run_bot_async –∑–∞–≤–µ—Ä—à–µ–Ω")


def run_bot_with_signal_handling():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–∏–≥–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ asyncio."""
    async def main():
        bot = None
        
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –±–æ—Ç–∞
            bot_task = asyncio.create_task(run_bot_async())
            
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
            def signal_handler():
                logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...")
                if not bot_task.done():
                    bot_task.cancel()
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è asyncio
            if os.name != 'nt':  # Unix-like —Å–∏—Å—Ç–µ–º—ã
                loop = asyncio.get_running_loop()
                loop.add_signal_handler(signal.SIGINT, signal_handler)
                loop.add_signal_handler(signal.SIGTERM, signal_handler)
            
            await bot_task
            
        except asyncio.CancelledError:
            logger.info("üìõ –ó–∞–¥–∞—á–∞ –±–æ—Ç–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        except KeyboardInterrupt:
            logger.info("‚å®Ô∏è KeyboardInterrupt –≤ main()")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ main(): {e}", exc_info=True)
        finally:
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞—á
            try:
                pending = [task for task in asyncio.all_tasks() if not task.done() and task != asyncio.current_task()]
                if pending:
                    logger.info(f"üßπ –û—á–∏—Å—Ç–∫–∞ {len(pending)} –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞—á...")
                    for task in pending:
                        if not task.done():
                            task.cancel()
                    
                    # –ñ–¥–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
                    try:
                        await asyncio.wait_for(
                            asyncio.gather(*pending, return_exceptions=True),
                            timeout=2.0
                        )
                    except asyncio.TimeoutError:
                        logger.debug("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞—á–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –≤ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
                        
            except Exception as cleanup_error:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ: {cleanup_error}")
    
    try:
        if os.name == 'nt':  # Windows
            # –í Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
            asyncio.run(main())
        else:
            # –í Unix-like —Å–∏—Å—Ç–µ–º–∞—Ö –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–¥—Ö–æ–¥
            asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("‚å®Ô∏è –ò—Ç–æ–≥–æ–≤—ã–π KeyboardInterrupt –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ run_bot_with_signal_handling: {e}", exc_info=True)


if __name__ == '__main__':
    run_bot_with_signal_handling()
